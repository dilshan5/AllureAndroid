plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    // id 'io.qameta.allure'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.qa.android.allure_android"
        minSdk config.minSdk
        targetSdk config.targetSdk
        versionCode 1
        versionName "1.0-RC01"

        missingDimensionStrategy "dataset", strategy.environmentDataset

        buildConfigField 'String', "EXECUTION_ENVIRONMENT", automation.executionEnvironment

       // testInstrumentationRunner "io.qameta.allure.android.runners.AllureAndroidJUnitRunner"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        // The package name of the test suite
        testApplicationId "com.qa.android.allure_android.suites"

        // region Convenience to invoke instrumentation tests using an agnostic parameter like -PtestSuite = Smoke
        def matrixTestSuite = project.findProperty("testSuite")
        if(matrixTestSuite != null) {
            matrixTestSuite = matrixTestSuite.toString().toLowerCase()
        } else {
            matrixTestSuite = ""
        }

        switch (matrixTestSuite) {
            case "smoke":
            case "regression":
                testInstrumentationRunnerArguments["class"] = testApplicationId + "." + matrixTestSuite.capitalize()
                break
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            testCoverageEnabled true
            // to verify the localization https://developer.android.com/guide/topics/resources/pseudolocales
            pseudoLocalesEnabled true
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions = ["version"]
    productFlavors {
        iodev {
            applicationIdSuffix ".iodev"
            versionNameSuffix "-iodev"
        }
        iotest {
            applicationIdSuffix ".iotest"
            versionNameSuffix "-iotest"
        }
        iostable {
            applicationIdSuffix ".iostable"
            versionNameSuffix "-iostable"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding true
    }
    namespace 'com.qa.android.allure_android'

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

apply from: '../gradleScripts/ui-test-screen-report.gradle'

dependencies {
    implementation deps.appCompat
    implementation deps.coreKtx
    implementation deps.materialComponents
    implementation deps.constraintLayout
    implementation deps.jetpackNavigation
    implementation deps.jetpackNavigationUi
    implementation deps.allureModel
    implementation deps.allureCommon
    implementation deps.allureJUnit
    implementation deps.allureAndroid
    implementation("org.redundent:kotlin-xml-builder:1.7.4")

    androidTestImplementation project(":dataset-testing")
    androidTestImplementation deps.androidTestRunner
    androidTestImplementation deps.androidTestRules
    androidTestImplementation deps.espressoCore
    androidTestImplementation deps.espressoIntents
    androidTestImplementation deps.kotlinStdLib
    androidTestImplementation deps.kotlinReflect
    androidTestImplementation deps.junitAndroidX

    testImplementation deps.junit
    androidTestUtil deps.orchestrator

}